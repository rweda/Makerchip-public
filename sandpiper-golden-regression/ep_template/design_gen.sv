// Generated by SandPiper(TM).
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)


// For X injection on assignments, disableable using `define SP_PHYS.
`ifdef WHEN
   $warning("WHEN macro redefined.");
`endif
`ifdef SP_PHYS
   `define WHEN(valid_sig)
`else
   `define WHEN(valid_sig) !valid_sig ? 'x :
`endif





//
// Scope: |default
//

// For |default$CycCnt.
logic [15:0] DEFAULT_CycCnt_a0;
logic [15:0] DEFAULT_CycCnt_a1;

// For |default$data.
logic [7:0] w_DEFAULT_data_a0;
logic [7:0] DEFAULT_data_a1;

// For |default$reset.
logic DEFAULT_reset_a0;

// For |default$valid.
logic [0:0] DEFAULT_valid_a0;

// Clock signals.
logic clkP_DEFAULT_valid_a1 ;



   //
   // Scope: |default
   //

      // Staging of $CycCnt.
      always_ff @(posedge clk) DEFAULT_CycCnt_a1[15:0] <= DEFAULT_CycCnt_a0[15:0];

      // Staging of $data.
      always_ff @(posedge clkP_DEFAULT_valid_a1) DEFAULT_data_a1[7:0] <= w_DEFAULT_data_a0[7:0];





//
// Gated clocks.
//



   //
   // Scope: |default
   //

      clk_gate gen_clkP_DEFAULT_valid_a1(clkP_DEFAULT_valid_a1, clk, 1'b1, (DEFAULT_valid_a0 ? 1'b1 : 1'bx), 1'b0);


