// Generated by SandPiper(TM).
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Scope: |pipe0
//

// For |pipe0$sig_a.
logic w_PIPE0_sig_a_a1;
logic PIPE0_sig_a_a2;
logic PIPE0_sig_a_a3;
logic PIPE0_sig_a_a4;
logic PIPE0_sig_a_a5;
logic PIPE0_sig_a_a6;
logic PIPE0_sig_a_a6L;

// For |pipe0$sig_b.
logic w_PIPE0_sig_b_a4L;
logic PIPE0_sig_b_a5L;
logic PIPE0_sig_b_a6L;
logic PIPE0_sig_b_a7L;
logic PIPE0_sig_b_a8L;
logic PIPE0_sig_b_a9;

// For |pipe0$sig_c.
logic PIPE0_sig_c_a0;
logic PIPE0_sig_c_a1;
logic PIPE0_sig_c_a2;
logic PIPE0_sig_c_a3;
logic PIPE0_sig_c_a4;
logic PIPE0_sig_c_a5;
logic PIPE0_sig_c_a6;
logic PIPE0_sig_c_a7;
logic PIPE0_sig_c_a8;
logic PIPE0_sig_c_a8L;

// For |pipe0$sig_f.
type_t w_PIPE0_sig_f_a1;
type_t PIPE0_sig_f_a2;
type_t PIPE0_sig_f_a3;
type_t PIPE0_sig_f_a4;
type_t PIPE0_sig_f_a4L;

// For |pipe0$sig_g.
logic w_PIPE0_sig_g_a1;
logic PIPE0_sig_g_a2;
logic PIPE0_sig_g_a3;
logic PIPE0_sig_g_a4;
logic PIPE0_sig_g_a4L;

// For |pipe0$valid.
logic PIPE0_valid_a0;
logic PIPE0_valid_a1;
logic PIPE0_valid_a2;
logic PIPE0_valid_a3;
logic PIPE0_valid_a3L;
logic PIPE0_valid_a4;
logic PIPE0_valid_a4L;
logic PIPE0_valid_a5;
logic PIPE0_valid_a5L;
logic PIPE0_valid_a6L;
logic PIPE0_valid_a7L;
logic PIPE0_valid_a8;
logic PIPE0_valid_a9;

// Clock signals.
logic clkP_PIPE0_valid_a2 ;
logic clkP_PIPE0_valid_a3 ;
logic clkP_PIPE0_valid_a4 ;
logic clkP_PIPE0_valid_a4L ;
logic clkP_PIPE0_valid_a5 ;
logic clkP_PIPE0_valid_a5L ;
logic clkP_PIPE0_valid_a6 ;
logic clkP_PIPE0_valid_a6L ;
logic clkP_PIPE0_valid_a7L ;
logic clkP_PIPE0_valid_a8L ;
logic clkP_PIPE0_valid_a9 ;



   //
   // Scope: |pipe0
   //

      // Staging of $sig_a.
      always_ff @(posedge clkP_PIPE0_valid_a2) PIPE0_sig_a_a2 <= w_PIPE0_sig_a_a1;
      always_ff @(posedge clkP_PIPE0_valid_a3) PIPE0_sig_a_a3 <= PIPE0_sig_a_a2;
      always_ff @(posedge clkP_PIPE0_valid_a4) PIPE0_sig_a_a4 <= PIPE0_sig_a_a3;
      always_ff @(posedge clkP_PIPE0_valid_a5) PIPE0_sig_a_a5 <= PIPE0_sig_a_a4;
      always_ff @(posedge clkP_PIPE0_valid_a6) PIPE0_sig_a_a6 <= PIPE0_sig_a_a5;
      always_latch if(clkP_PIPE0_valid_a6L) PIPE0_sig_a_a6L <= PIPE0_sig_a_a6;

      // Staging of $sig_b.
      always_ff @(posedge clkP_PIPE0_valid_a5L) PIPE0_sig_b_a5L <= w_PIPE0_sig_b_a4L;
      always_ff @(posedge clkP_PIPE0_valid_a6L) PIPE0_sig_b_a6L <= PIPE0_sig_b_a5L;
      always_ff @(posedge clkP_PIPE0_valid_a7L) PIPE0_sig_b_a7L <= PIPE0_sig_b_a6L;
      always_ff @(posedge clkP_PIPE0_valid_a8L) PIPE0_sig_b_a8L <= PIPE0_sig_b_a7L;
      always_latch if(clkP_PIPE0_valid_a9) PIPE0_sig_b_a9 <= PIPE0_sig_b_a8L;

      // Staging of $sig_c.
      always_ff @(posedge clk) PIPE0_sig_c_a1 <= PIPE0_sig_c_a0;
      always_ff @(posedge clk) PIPE0_sig_c_a2 <= PIPE0_sig_c_a1;
      always_ff @(posedge clk) PIPE0_sig_c_a3 <= PIPE0_sig_c_a2;
      always_ff @(posedge clk) PIPE0_sig_c_a4 <= PIPE0_sig_c_a3;
      always_ff @(posedge clk) PIPE0_sig_c_a5 <= PIPE0_sig_c_a4;
      always_ff @(posedge clk) PIPE0_sig_c_a6 <= PIPE0_sig_c_a5;
      always_ff @(posedge clk) PIPE0_sig_c_a7 <= PIPE0_sig_c_a6;
      always_ff @(posedge clk) PIPE0_sig_c_a8 <= PIPE0_sig_c_a7;
      always_latch if(n_clk) PIPE0_sig_c_a8L <= PIPE0_sig_c_a8;

      // Staging of $sig_f.
      always_ff @(posedge clkP_PIPE0_valid_a2) PIPE0_sig_f_a2 <= w_PIPE0_sig_f_a1;
      always_ff @(posedge clkP_PIPE0_valid_a3) PIPE0_sig_f_a3 <= PIPE0_sig_f_a2;
      always_ff @(posedge clkP_PIPE0_valid_a4) PIPE0_sig_f_a4 <= PIPE0_sig_f_a3;
      always_latch if(clkP_PIPE0_valid_a4L) PIPE0_sig_f_a4L <= PIPE0_sig_f_a4;

      // Staging of $sig_g.
      always_ff @(posedge clkP_PIPE0_valid_a2) PIPE0_sig_g_a2 <= w_PIPE0_sig_g_a1;
      always_ff @(posedge clkP_PIPE0_valid_a3) PIPE0_sig_g_a3 <= PIPE0_sig_g_a2;
      always_ff @(posedge clkP_PIPE0_valid_a4) PIPE0_sig_g_a4 <= PIPE0_sig_g_a3;
      always_latch if(clkP_PIPE0_valid_a4L) PIPE0_sig_g_a4L <= PIPE0_sig_g_a4;

      // Staging of $valid.
      always_ff @(posedge clk) PIPE0_valid_a1 <= PIPE0_valid_a0;
      always_ff @(posedge clk) PIPE0_valid_a2 <= PIPE0_valid_a1;
      always_ff @(posedge clk) PIPE0_valid_a3 <= PIPE0_valid_a2;
      always_latch if(n_clk) PIPE0_valid_a3L <= PIPE0_valid_a3;
      always_latch if(clk) PIPE0_valid_a4 <= PIPE0_valid_a3L;
      always_latch if(n_clk) PIPE0_valid_a4L <= PIPE0_valid_a4;
      always_latch if(clk) PIPE0_valid_a5 <= PIPE0_valid_a4L;
      always_latch if(n_clk) PIPE0_valid_a5L <= PIPE0_valid_a5;
      always_ff @(posedge n_clk) PIPE0_valid_a6L <= PIPE0_valid_a5L;
      always_ff @(posedge n_clk) PIPE0_valid_a7L <= PIPE0_valid_a6L;
      always_latch if(clk) PIPE0_valid_a8 <= PIPE0_valid_a7L;
      always_ff @(posedge clk) PIPE0_valid_a9 <= PIPE0_valid_a8;





//
// Gated clocks.
//



   //
   // Scope: |pipe0
   //

      clk_gate gen_clkP_PIPE0_valid_a2(clkP_PIPE0_valid_a2, clk, 1'b1, PIPE0_valid_a1, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a3(clkP_PIPE0_valid_a3, clk, 1'b1, PIPE0_valid_a2, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a4(clkP_PIPE0_valid_a4, clk, 1'b1, PIPE0_valid_a3, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a4L(clkP_PIPE0_valid_a4L, n_clk, 1'b1, PIPE0_valid_a3L, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a5(clkP_PIPE0_valid_a5, clk, 1'b1, PIPE0_valid_a4, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a5L(clkP_PIPE0_valid_a5L, n_clk, 1'b1, PIPE0_valid_a4L, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a6(clkP_PIPE0_valid_a6, clk, 1'b1, PIPE0_valid_a5, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a6L(clkP_PIPE0_valid_a6L, n_clk, 1'b1, PIPE0_valid_a5L, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a7L(clkP_PIPE0_valid_a7L, n_clk, 1'b1, PIPE0_valid_a6L, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a8L(clkP_PIPE0_valid_a8L, n_clk, 1'b1, PIPE0_valid_a7L, 1'b0);
      clk_gate gen_clkP_PIPE0_valid_a9(clkP_PIPE0_valid_a9, clk, 1'b1, PIPE0_valid_a8, 1'b0);


